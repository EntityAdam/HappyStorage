@page "/customers"
@using HappyStorage.BlazorWeb.Components;
@inject HappyStorage.Common.Ui.Customers.ViewModels.ICustomerListViewModel viewModel;
@inject Microsoft.AspNetCore.Components.IUriHelper UriHelper;

<h1>Customers</h1>
<div>
    <button class="btn btn-primary" onclick="@CreateCustomer">New Customer</button>
</div>

@if (viewModel.Customers.Any())
{
    <br />
    <div class="row">
        <table class="table">
            <thead>
                <tr>
                    <th scope="col"><LabelComponent labelFor="@(() => viewModel.Customers[0].CustomerNumber)" /></th>
                    <th scope="col"><LabelComponent labelFor="@(() => viewModel.Customers[0].FullName)" /></th>
                    <th scope="col"></th>
                </tr>
            </thead>

            @foreach (var customer in viewModel.Customers)
            {
                <tr>
                    <th scope="row">@customer.CustomerNumber</th>
                    <td>@customer.FullName</td>
                    <td>
                        <a href="/Tenant/UnitList/@customer.CustomerNumber" class="btn btn-sm btn-primary">Manage Units</a>
                        <a asp-page="/Tenant/Payment" asp-route-customerNumber="@customer.CustomerNumber" class="btn btn-sm btn-info">Make a Payment</a>
                        <a href="/Customer/Delete/@customer.CustomerNumber" class="btn btn-sm btn-danger">Delete</a>
                    </td>
                </tr>
            }
        </table>
        @if (viewModel.HasPrevPage)
        {
            <button class="btn btn-primary" onclick="@PrevPage">Prev</button>
        }
        @if (viewModel.HasNextPage)
        {
            <button class="btn btn-primary" onclick="@NextPage">Next</button>
        }
    </div>

}

@functions {

    protected override void OnInit()
    {

        viewModel.Load();
    }

    protected void CreateCustomer()
    {
        UriHelper.NavigateTo("/customer/create");
    }

    protected void NextPage()
    {
        viewModel.NextPageCommand.Execute();
    }

    protected void PrevPage()
    {
        viewModel.PrevPageCommand.Execute();
    }
}
