@using HappyStorage.BlazorWeb.Helpers;
@using HappyStorage.Common.Ui.Units.ViewModels;
@inject HappyStorage.Common.Ui.Units.ViewModels.IUnitFilterViewModel viewModel

<div class="bg-light">
    <h4>Filter</h4>
    <div class="form-row">
        <div class="form-check form-check-inline mb-2 col-md-3">
            <input asp-for="@viewModel.IsClimateControlled" class="form-check-input" type="checkbox" />
            <LabelComponent class="form-check-label" labelFor="@viewModel.GetType().GetProperty("IsClimateControlled")" />
        </div>
    </div>
    <div class="form-row">
        <div class="form-check form-check-inline mb-2 col-md-3">
            <input asp-for="@viewModel.IsVehicleAccessible" class="form-check-input" type="checkbox" />
            <LabelComponent class="form-check-label" labelFor="@viewModel.GetType().GetProperty("IsVehicleAccessible")" />
        </div>
    </div>
    <div class="form-row">
        <div class="mb-2 col-md-2">
            <LabelComponent labelFor="@viewModel.GetType().GetProperty("MinimumCubicFeet")" />
            <input asp-for="@viewModel.MinimumCubicFeet" class="form-control" type="number" />
        </div>
    </div>
    <div class="form-row">
        <button class="btn btn-primary mb-2" onclick="@OnClick">Apply Filter</button>
    </div>
</div>

@functions {

    public IUnitFilterViewModel vm { get; set; }

    protected override void OnInit()
    {
        vm = viewModel;
    }

    private string isClimateControlled => "wut";

    private string isVehicleAccessible => "Vehicle Accessible?";

    private string minimumCubicFeet => "Min. Cubic Feet";

    [Parameter]
    private EventCallback<UIMouseEventArgs> OnClick { get; set; }
}